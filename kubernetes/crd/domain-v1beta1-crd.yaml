# Copyright (c) 2020, 2021, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: domains.weblogic.oracle
spec:
  group: weblogic.oracle
  names:
    kind: Domain
    plural: domains
    shortNames:
    - dom
    singular: domain
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    scale:
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      properties:
        spec:
          type: object
          definitions:
            AdminServer:
              type: object
              properties:
                serverStartState:
                  type: string
                  description: The WebLogic runtime state in which the server is to
                    be started. Use ADMIN if the server should start in the admin
                    state. Defaults to RUNNING.
                  enum:
                  - RUNNING
                  - ADMIN
                serverService:
                  $Ref: '#/definitions/ServerService'
                  description: Customization affecting the generation of Kubernetes
                    Services for WebLogic Server instances.
                serverPod:
                  $Ref: '#/definitions/ServerPod'
                  description: Customization affecting the generation of Pods for
                    WebLogic Server instances.
                serverStartPolicy:
                  type: string
                  description: 'The strategy for deciding whether to start a WebLogic
                    Server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED.
                    Defaults to IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers.'
                  enum:
                  - ALWAYS
                  - NEVER
                  - IF_NEEDED
                adminService:
                  $Ref: '#/definitions/AdminService'
                  description: Customization affecting the generation of the Kubernetes
                    Service for the Administration Server. These settings can also
                    specify the creation of a second NodePort Service to expose specific
                    channels or network access points outside the Kubernetes cluster.
                restartVersion:
                  type: string
                  description: 'Changes to this field cause the operator to restart
                    WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers.'
            AdminService:
              type: object
              properties:
                channels:
                  type: array
                  description: Specifies which of the Administration Server's WebLogic
                    channels should be exposed outside the Kubernetes cluster via
                    a NodePort Service, along with the port for each channel. If not
                    specified, the Administration Server's NodePort Service will not
                    be created.
                  items:
                    $ref: '#/definitions/Channel'
                annotations:
                  $Ref: '#/definitions/Map'
                  description: Annotations to associate with the Administration Server's
                    Service(s).
                labels:
                  $Ref: '#/definitions/Map'
                  description: Labels to associate with the Administration Server's
                    Service(s).
            Channel:
              type: object
              properties:
                channelName:
                  type: string
                  description: Name of the channel. The "default" value refers to
                    the Administration Server's default channel, which is configured
                    using the ServerMBean's ListenPort. The "default-secure" value
                    refers to the Administration Server's default secure channel,
                    which is configured using the ServerMBean's SSLMBean's ListenPort.
                    The "default-admin" value refers to the Administration Server's
                    default administrative channel, which is configured using the
                    DomainMBean's AdministrationPort. Otherwise, provide the name
                    of one of the Administration Server's network access points, which
                    is configured using the ServerMBean's NetworkAccessMBeans. The
                    "default", "default-secure", and "default-admin" channels may
                    not be specified here when using Istio.
                nodePort:
                  type: number
                  description: Specifies the port number used to access the WebLogic
                    channel outside of the Kubernetes cluster. If not specified, defaults
                    to the port defined by the WebLogic channel.
              required:
              - channelName
            Cluster:
              type: object
              properties:
                serverStartState:
                  type: string
                  description: The WebLogic runtime state in which the server is to
                    be started. Use ADMIN if the server should start in the admin
                    state. Defaults to RUNNING.
                  enum:
                  - RUNNING
                  - ADMIN
                serverService:
                  $Ref: '#/definitions/ServerService'
                  description: Customization affecting the generation of Kubernetes
                    Services for WebLogic Server instances.
                maxUnavailable:
                  type: number
                  description: The maximum number of cluster members that can be temporarily
                    unavailable. Defaults to 1.
                  minimum: 1.0
                replicas:
                  type: number
                  description: The number of cluster member Managed Server instances
                    to start for this WebLogic cluster. The operator will sort cluster
                    member Managed Server names from the WebLogic domain configuration
                    by normalizing any numbers in the Managed Server name and then
                    sorting alphabetically. This is done so that server names such
                    as "managed-server10" come after "managed-server9". The operator
                    will then start Managed Server instances from the sorted list,
                    up to the `replicas` count, unless specific Managed Servers are
                    specified as starting in their entry under the `managedServers`
                    field. In that case, the specified Managed Server instances will
                    be started and then additional cluster members will be started,
                    up to the `replicas` count, by finding further cluster members
                    in the sorted list that are not already started. If cluster members
                    are started because of their related entries under `managedServers`,
                    then this cluster may have more cluster members running than its
                    `replicas` count. Defaults to 0.
                  minimum: 0.0
                clusterName:
                  type: string
                  description: The name of the cluster. This value must match the
                    name of a WebLogic cluster already defined in the WebLogic domain
                    configuration. Required.
                allowReplicasBelowMinDynClusterSize:
                  type: boolean
                  description: Specifies whether the number of running cluster members
                    is allowed to drop below the minimum dynamic cluster size configured
                    in the WebLogic domain configuration. Otherwise, the operator
                    will ensure that the number of running cluster members is not
                    less than the minimum dynamic cluster setting. This setting applies
                    to dynamic clusters only. Defaults to true.
                serverPod:
                  $Ref: '#/definitions/ServerPod'
                  description: Customization affecting the generation of Pods for
                    WebLogic Server instances.
                clusterService:
                  $Ref: '#/definitions/KubernetesResource'
                  description: Customization affecting Kubernetes Service generated
                    for this WebLogic cluster.
                maxConcurrentShutdown:
                  type: number
                  description: The maximum number of WebLogic Server instances that
                    will shut down in parallel for this cluster when it is being partially
                    shut down by lowering its replica count. A value of 0 means there
                    is no limit. Defaults to `spec.maxClusterConcurrentShutdown`,
                    which defaults to 1.
                  minimum: 0.0
                serverStartPolicy:
                  type: string
                  description: 'The strategy for deciding whether to start a WebLogic
                    Server instance. Legal values are NEVER, or IF_NEEDED. Defaults
                    to IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers.'
                  enum:
                  - NEVER
                  - IF_NEEDED
                maxConcurrentStartup:
                  type: number
                  description: The maximum number of Managed Servers instances that
                    the operator will start in parallel for this cluster in response
                    to a change in the `replicas` count. If more Managed Server instances
                    must be started, the operator will wait until a Managed Server
                    Pod is in the `Ready` state before starting the next Managed Server
                    instance. A value of 0 means all Managed Server instances will
                    start in parallel. Defaults to 0.
                  minimum: 0.0
                restartVersion:
                  type: string
                  description: 'Changes to this field cause the operator to restart
                    WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers.'
              required:
              - clusterName
            Configuration:
              type: object
              properties:
                overrideDistributionStrategy:
                  type: string
                  description: Determines how updated configuration overrides are
                    distributed to already running WebLogic Server instances following
                    introspection when the `domainHomeSourceType` is PersistentVolume
                    or Image. Configuration overrides are generated during introspection
                    from Secrets, the `overridesConfigMap` field, and WebLogic domain
                    topology. Legal values are DYNAMIC, which means that the operator
                    will distribute updated configuration overrides dynamically to
                    running servers, and ON_RESTART, which means that servers will
                    use updated configuration overrides only after the server's next
                    restart. The selection of ON_RESTART will not cause servers to
                    restart when there are updated configuration overrides available.
                    See also `domains.spec.introspectVersion`. Defaults to DYNAMIC.
                  enum:
                  - DYNAMIC
                  - ON_RESTART
                opss:
                  $Ref: '#/definitions/Opss'
                  description: Settings for OPSS security.
                model:
                  $Ref: '#/definitions/Model'
                  description: Model in image model files and properties.
                secrets:
                  type: array
                  description: A list of names of the Secrets for WebLogic configuration
                    overrides or model. If this field is specified, then the value
                    of `spec.configOverrideSecrets` is ignored.
                  items:
                    type: string
                istio:
                  $Ref: '#/definitions/Istio'
                  description: The Istio service mesh integration settings.
                overridesConfigMap:
                  type: string
                  description: The name of the ConfigMap for WebLogic configuration
                    overrides. If this field is specified, then the value of `spec.configOverrides`
                    is ignored.
                introspectorJobActiveDeadlineSeconds:
                  type: number
                  description: The introspector job timeout value in seconds. If this
                    field is specified, then the operator's ConfigMap `data.introspectorJobActiveDeadlineSeconds`
                    value is ignored. Defaults to 120 seconds.
            ExporterQuery:
              type: object
              additionalProperties:
                $ref: '#/definitions/ExporterQuery'
              properties:
                prefix:
                  type: string
                  description: A name prefix to use for all the metrics gathered from
                    the current level.
                values:
                  type: array
                  description: The attributes for which metrics are to be output.
                    If not specified and a prefix is defined, all values on the MBean
                    will be selected.
                  items:
                    type: string
                keyName:
                  type: string
                  description: The name to use for the key in the qualifier; defaults
                    to the name of the attribute.
                type:
                  type: string
                  description: A filter for subtypes. If specified, only those objects
                    whose type attribute matches will be collected.
                key:
                  type: string
                  description: The name of the attribute to use as a key for qualifiers
                    in the output.
            IntOrString:
              type: object
              properties:
                intValue:
                  type: number
                isInt:
                  type: boolean
                strValue:
                  type: string
              required:
              - isInt
            Istio:
              type: object
              properties:
                readinessPort:
                  type: number
                  description: The operator will create a WebLogic network access
                    point with this port that will then be exposed from the container
                    running the WebLogic Server instance. The readiness probe will
                    use this network access point to verify that the server instance
                    is ready for application traffic. Defaults to 8888.
                enabled:
                  type: boolean
                  description: True, if this domain is deployed under an Istio service
                    mesh. Defaults to true when the `istio` field is specified.
            KubernetesResource:
              type: object
              properties:
                annotations:
                  $Ref: '#/definitions/Map'
                  description: The annotations to be added to generated resources.
                labels:
                  $Ref: '#/definitions/Map'
                  description: The labels to be added to generated resources. The
                    label names must not start with "weblogic.".
            ManagedServer:
              type: object
              properties:
                serverStartState:
                  type: string
                  description: The WebLogic runtime state in which the server is to
                    be started. Use ADMIN if the server should start in the admin
                    state. Defaults to RUNNING.
                  enum:
                  - RUNNING
                  - ADMIN
                serverService:
                  $Ref: '#/definitions/ServerService'
                  description: Customization affecting the generation of Kubernetes
                    Services for WebLogic Server instances.
                serverName:
                  type: string
                  description: The name of the Managed Server. This name must match
                    the name of a Managed Server instance or of a dynamic cluster
                    member name from a server template already defined in the WebLogic
                    domain configuration. Required.
                serverPod:
                  $Ref: '#/definitions/ServerPod'
                  description: Customization affecting the generation of Pods for
                    WebLogic Server instances.
                serverStartPolicy:
                  type: string
                  description: 'The strategy for deciding whether to start a WebLogic
                    Server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED.
                    Defaults to IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers.'
                  enum:
                  - ALWAYS
                  - NEVER
                  - IF_NEEDED
                restartVersion:
                  type: string
                  description: 'Changes to this field cause the operator to restart
                    WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers.'
              required:
              - serverName
            Map:
              type: object
              additionalProperties:
                type: string
              properties: {}
            Model:
              type: object
              properties:
                runtimeEncryptionSecret:
                  type: string
                  description: Runtime encryption secret. Required when `domainHomeSourceType`
                    is set to FromModel.
                domainType:
                  type: string
                  description: 'WebLogic Deploy Tooling domain type. Legal values:
                    WLS, RestrictedJRF, JRF. Defaults to WLS.'
                  enum:
                  - WLS
                  - RestrictedJRF
                  - JRF
                configMap:
                  type: string
                  description: Name of a ConfigMap containing the WebLogic Deploy
                    Tooling model.
                modelHome:
                  type: string
                  description: Location of the WebLogic Deploy Tooling model home.
                    Defaults to /u01/wdt/models.
            MonitoringExporterConfiguration:
              type: object
              properties:
                domainQualifier:
                  type: boolean
                  description: If true, metrics qualifiers will include the operator
                    domain. Defaults to false.
                metricsNameSnakeCase:
                  type: boolean
                  description: If true, metrics names will be constructed with underscores
                    between words (snake case). By default, metrics names will be
                    constructed with capital letters separating words (camel case).
                queries:
                  type: array
                  items:
                    $ref: '#/definitions/ExporterQuery'
            Opss:
              type: object
              properties:
                walletFileSecret:
                  type: string
                  description: Name of a Secret containing the OPSS key wallet file,
                    which must be in a field named `walletFile`. Use this to allow
                    a JRF domain to reuse its entries in the RCU database. This allows
                    you to specify a wallet file that was obtained from the domain
                    home after the domain was booted for the first time.
                walletPasswordSecret:
                  type: string
                  description: Name of a Secret containing the OPSS key passphrase,
                    which must be in a field named `walletPassword`. Used to encrypt
                    and decrypt the wallet that is used for accessing the domain's
                    entries in its RCU database.
            ProbeTuning:
              type: object
              properties:
                periodSeconds:
                  type: number
                  description: The number of seconds between checks.
                timeoutSeconds:
                  type: number
                  description: The number of seconds with no response that indicates
                    a failure.
                initialDelaySeconds:
                  type: number
                  description: The number of seconds before the first check is performed.
            Quantity:
              type: object
              properties:
                number:
                  type: number
                format:
                  type: string
                  enum:
                  - DECIMAL_EXPONENT
                  - DECIMAL_SI
                  - BINARY_SI
            ServerPod:
              type: object
              properties:
                nodeName:
                  type: string
                  description: NodeName is a request to schedule this Pod onto a specific
                    Node. If it is non-empty, the scheduler simply schedules this
                    pod onto that node, assuming that it fits the resource requirements.
                    See `kubectl explain pods.spec.nodeName`.
                livenessProbe:
                  $Ref: '#/definitions/ProbeTuning'
                  description: Settings for the liveness probe associated with a WebLogic
                    Server instance.
                readinessGates:
                  type: array
                  description: 'If specified, all readiness gates will be evaluated
                    for Pod readiness. A Pod is ready when all its containers are
                    ready AND all conditions specified in the readiness gates have
                    a status equal to "True". More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md.'
                  items:
                    $ref: '#/definitions/V1PodReadinessGate'
                serviceAccountName:
                  type: string
                  description: Name of the ServiceAccount to be used to run this Pod.
                    If it is not set, default ServiceAccount will be used. The ServiceAccount
                    has to exist at the time the Pod is created. See `kubectl explain
                    pods.spec.serviceAccountName`.
                podSecurityContext:
                  $Ref: '#/definitions/V1PodSecurityContext'
                  description: Pod-level security attributes. See `kubectl explain
                    pods.spec.securityContext`.
                priorityClassName:
                  type: string
                  description: If specified, indicates the Pod's priority. "system-node-critical"
                    and "system-cluster-critical" are two special keywords which indicate
                    the highest priorities with the former being the highest priority.
                    Any other name must be defined by creating a PriorityClass object
                    with that name. If not specified, the pod priority will be the
                    default or zero, if there is no default. See `kubectl explain
                    pods.spec.priorityClassName`.
                volumes:
                  type: array
                  description: Additional volumes to be created in the server Pod.
                    See `kubectl explain pods.spec.volumes`.
                  items:
                    $ref: '#/definitions/V1Volume'
                resources:
                  $Ref: '#/definitions/V1ResourceRequirements'
                  description: Memory and CPU minimum requirements and limits for
                    the WebLogic Server instance. See `kubectl explain pods.spec.containers.resources`.
                annotations:
                  $Ref: '#/definitions/Map'
                  description: The annotations to be added to generated resources.
                env:
                  type: array
                  description: 'A list of environment variables to set in the container
                    running a WebLogic Server instance. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#jvm-memory-and-java-option-environment-variables.
                    See `kubectl explain pods.spec.containers.env`.'
                  items:
                    $ref: '#/definitions/V1EnvVar'
                restartPolicy:
                  type: string
                  description: 'Restart policy for all containers within the Pod.
                    One of Always, OnFailure, Never. Default to Always. More info:
                    https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy.
                    See `kubectl explain pods.spec.restartPolicy`.'
                nodeSelector:
                  $Ref: '#/definitions/Map'
                  description: Selector which must match a Node's labels for the Pod
                    to be scheduled on that Node. See `kubectl explain pods.spec.nodeSelector`.
                volumeMounts:
                  type: array
                  description: Additional volume mounts for the container running
                    a WebLogic Server instance. See `kubectl explain pods.spec.containers.volumeMounts`.
                  items:
                    $ref: '#/definitions/V1VolumeMount'
                labels:
                  $Ref: '#/definitions/Map'
                  description: The labels to be added to generated resources. The
                    label names must not start with "weblogic.".
                runtimeClassName:
                  type: string
                  description: 'RuntimeClassName refers to a RuntimeClass object in
                    the node.k8s.io group, which should be used to run this Pod. If
                    no RuntimeClass resource matches the named class, the Pod will
                    not be run. If unset or empty, the "legacy" RuntimeClass will
                    be used, which is an implicit class with an empty definition that
                    uses the default runtime handler. More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md
                    This is an alpha feature and may change in the future. See `kubectl
                    explain pods.spec.runtimeClassName`.'
                tolerations:
                  type: array
                  description: If specified, the Pod's tolerations. See `kubectl explain
                    pods.spec.tolerations`.
                  items:
                    $ref: '#/definitions/V1Toleration'
                readinessProbe:
                  $Ref: '#/definitions/ProbeTuning'
                  description: Settings for the readiness probe associated with a
                    WebLogic Server instance.
                containers:
                  type: array
                  description: Additional containers to be included in the server
                    Pod. See `kubectl explain pods.spec.containers`.
                  items:
                    $ref: '#/definitions/V1Container'
                containerSecurityContext:
                  $Ref: '#/definitions/V1SecurityContext'
                  description: Container-level security attributes. Will override
                    any matching Pod-level attributes. See `kubectl explain pods.spec.containers.securityContext`.
                schedulerName:
                  type: string
                  description: If specified, the Pod will be dispatched by the specified
                    scheduler. If not specified, the Pod will be dispatched by the
                    default scheduler. See `kubectl explain pods.spec.schedulerName`.
                initContainers:
                  type: array
                  description: Initialization containers to be included in the server
                    Pod. See `kubectl explain pods.spec.initContainers`.
                  items:
                    $ref: '#/definitions/V1Container'
                shutdown:
                  $Ref: '#/definitions/Shutdown'
                  description: Configures how the operator should shut down the server
                    instance.
                affinity:
                  $Ref: '#/definitions/V1Affinity'
                  description: If specified, the Pod's scheduling constraints. See
                    `kubectl explain pods.spec.affinity`
            ServerService:
              type: object
              properties:
                precreateService:
                  type: boolean
                  description: If true, the operator will create Services even for
                    Managed Server instances without running Pods.
                annotations:
                  $Ref: '#/definitions/Map'
                  description: The annotations to be added to generated resources.
                labels:
                  $Ref: '#/definitions/Map'
                  description: The labels to be added to generated resources. The
                    label names must not start with "weblogic.".
            Shutdown:
              type: object
              properties:
                ignoreSessions:
                  type: boolean
                  description: For graceful shutdown only, indicates to ignore pending
                    HTTP sessions during in-flight work handling. Defaults to false.
                shutdownType:
                  type: string
                  description: Specifies how the operator will shut down server instances.
                    Defaults to graceful shutdown.
                  enum:
                  - Graceful
                  - Forced
                timeoutSeconds:
                  type: number
                  description: For graceful shutdown only, number of seconds to wait
                    before aborting in-flight work and shutting down the server. Defaults
                    to 30 seconds.
            V1AWSElasticBlockStoreVolumeSource:
              type: object
              properties:
                partition:
                  type: number
                volumeID:
                  type: string
                readOnly:
                  type: boolean
                fsType:
                  type: string
              required:
              - volumeID
            V1Affinity:
              type: object
              properties:
                nodeAffinity:
                  $Ref: '#/definitions/V1NodeAffinity'
                podAffinity:
                  $Ref: '#/definitions/V1PodAffinity'
                podAntiAffinity:
                  $Ref: '#/definitions/V1PodAntiAffinity'
            V1AzureDiskVolumeSource:
              type: object
              properties:
                diskName:
                  type: string
                kind:
                  type: string
                readOnly:
                  type: boolean
                cachingMode:
                  type: string
                diskURI:
                  type: string
                fsType:
                  type: string
              required:
              - diskName
              - diskURI
            V1AzureFileVolumeSource:
              type: object
              properties:
                secretName:
                  type: string
                readOnly:
                  type: boolean
                shareName:
                  type: string
              required:
              - secretName
              - shareName
            V1CSIVolumeSource:
              type: object
              properties:
                driver:
                  type: string
                nodePublishSecretRef:
                  $Ref: '#/definitions/V1LocalObjectReference'
                readOnly:
                  type: boolean
                fsType:
                  type: string
                volumeAttributes:
                  $Ref: '#/definitions/Map'
              required:
              - driver
            V1Capabilities:
              type: object
              properties:
                add:
                  type: array
                  items:
                    type: string
                drop:
                  type: array
                  items:
                    type: string
            V1CephFSVolumeSource:
              type: object
              properties:
                path:
                  type: string
                secretRef:
                  $Ref: '#/definitions/V1LocalObjectReference'
                secretFile:
                  type: string
                readOnly:
                  type: boolean
                user:
                  type: string
                monitors:
                  type: array
                  items:
                    type: string
              required:
              - monitors
            V1CinderVolumeSource:
              type: object
              properties:
                secretRef:
                  $Ref: '#/definitions/V1LocalObjectReference'
                volumeID:
                  type: string
                readOnly:
                  type: boolean
                fsType:
                  type: string
              required:
              - volumeID
            V1ConfigMapEnvSource:
              type: object
              properties:
                name:
                  type: string
                optional:
                  type: boolean
            V1ConfigMapKeySelector:
              type: object
              properties:
                name:
                  type: string
                optional:
                  type: boolean
                key:
                  type: string
              required:
              - key
            V1ConfigMapProjection:
              type: object
              properties:
                name:
                  type: string
                optional:
                  type: boolean
                items:
                  type: array
                  items:
                    $ref: '#/definitions/V1KeyToPath'
            V1ConfigMapVolumeSource:
              type: object
              properties:
                defaultMode:
                  type: number
                name:
                  type: string
                optional:
                  type: boolean
                items:
                  type: array
                  items:
                    $ref: '#/definitions/V1KeyToPath'
            V1Container:
              type: object
              properties:
                volumeDevices:
                  type: array
                  items:
                    $ref: '#/definitions/V1VolumeDevice'
                image:
                  type: string
                imagePullPolicy:
                  type: string
                livenessProbe:
                  $Ref: '#/definitions/V1Probe'
                stdin:
                  type: boolean
                terminationMessagePolicy:
                  type: string
                terminationMessagePath:
                  type: string
                workingDir:
                  type: string
                resources:
                  $Ref: '#/definitions/V1ResourceRequirements'
                securityContext:
                  $Ref: '#/definitions/V1SecurityContext'
                startupProbe:
                  $Ref: '#/definitions/V1Probe'
                env:
                  type: array
                  items:
                    $ref: '#/definitions/V1EnvVar'
                ports:
                  type: array
                  items:
                    $ref: '#/definitions/V1ContainerPort'
                command:
                  type: array
                  items:
                    type: string
                volumeMounts:
                  type: array
                  items:
                    $ref: '#/definitions/V1VolumeMount'
                args:
                  type: array
                  items:
                    type: string
                lifecycle:
                  $Ref: '#/definitions/V1Lifecycle'
                name:
                  type: string
                tty:
                  type: boolean
                readinessProbe:
                  $Ref: '#/definitions/V1Probe'
                stdinOnce:
                  type: boolean
                envFrom:
                  type: array
                  items:
                    $ref: '#/definitions/V1EnvFromSource'
              required:
              - name
            V1ContainerPort:
              type: object
              properties:
                protocol:
                  type: string
                hostIP:
                  type: string
                name:
                  type: string
                containerPort:
                  type: number
                hostPort:
                  type: number
              required:
              - containerPort
            V1DownwardAPIProjection:
              type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/definitions/V1DownwardAPIVolumeFile'
            V1DownwardAPIVolumeFile:
              type: object
              properties:
                mode:
                  type: number
                path:
                  type: string
                resourceFieldRef:
                  $Ref: '#/definitions/V1ResourceFieldSelector'
                fieldRef:
                  $Ref: '#/definitions/V1ObjectFieldSelector'
              required:
              - path
            V1DownwardAPIVolumeSource:
              type: object
              properties:
                defaultMode:
                  type: number
                items:
                  type: array
                  items:
                    $ref: '#/definitions/V1DownwardAPIVolumeFile'
            V1EmptyDirVolumeSource:
              type: object
              properties:
                sizeLimit:
                  $Ref: '#/definitions/Quantity'
                medium:
                  type: string
            V1EnvFromSource:
              type: object
              properties:
                configMapRef:
                  $Ref: '#/definitions/V1ConfigMapEnvSource'
                prefix:
                  type: string
                secretRef:
                  $Ref: '#/definitions/V1SecretEnvSource'
            V1EnvVar:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
                valueFrom:
                  $Ref: '#/definitions/V1EnvVarSource'
              required:
              - name
            V1EnvVarSource:
              type: object
              properties:
                secretKeyRef:
                  $Ref: '#/definitions/V1SecretKeySelector'
                resourceFieldRef:
                  $Ref: '#/definitions/V1ResourceFieldSelector'
                configMapKeyRef:
                  $Ref: '#/definitions/V1ConfigMapKeySelector'
                fieldRef:
                  $Ref: '#/definitions/V1ObjectFieldSelector'
            V1ExecAction:
              type: object
              properties:
                command:
                  type: array
                  items:
                    type: string
            V1FCVolumeSource:
              type: object
              properties:
                lun:
                  type: number
                targetWWNs:
                  type: array
                  items:
                    type: string
                readOnly:
                  type: boolean
                wwids:
                  type: array
                  items:
                    type: string
                fsType:
                  type: string
            V1FlexVolumeSource:
              type: object
              properties:
                driver:
                  type: string
                options:
                  $Ref: '#/definitions/Map'
                secretRef:
                  $Ref: '#/definitions/V1LocalObjectReference'
                readOnly:
                  type: boolean
                fsType:
                  type: string
              required:
              - driver
            V1FlockerVolumeSource:
              type: object
              properties:
                datasetName:
                  type: string
                datasetUUID:
                  type: string
            V1GCEPersistentDiskVolumeSource:
              type: object
              properties:
                partition:
                  type: number
                readOnly:
                  type: boolean
                pdName:
                  type: string
                fsType:
                  type: string
              required:
              - pdName
            V1GitRepoVolumeSource:
              type: object
              properties:
                repository:
                  type: string
                directory:
                  type: string
                revision:
                  type: string
              required:
              - repository
            V1GlusterfsVolumeSource:
              type: object
              properties:
                path:
                  type: string
                endpoints:
                  type: string
                readOnly:
                  type: boolean
              required:
              - endpoints
              - path
            V1HTTPGetAction:
              type: object
              properties:
                path:
                  type: string
                scheme:
                  type: string
                port:
                  $Ref: '#/definitions/IntOrString'
                host:
                  type: string
                httpHeaders:
                  type: array
                  items:
                    $ref: '#/definitions/V1HTTPHeader'
              required:
              - port
            V1HTTPHeader:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
              required:
              - name
              - value
            V1Handler:
              type: object
              properties:
                tcpSocket:
                  $Ref: '#/definitions/V1TCPSocketAction'
                exec:
                  $Ref: '#/definitions/V1ExecAction'
                httpGet:
                  $Ref: '#/definitions/V1HTTPGetAction'
            V1HostPathVolumeSource:
              type: object
              properties:
                path:
                  type: string
                type:
                  type: string
              required:
              - path
            V1ISCSIVolumeSource:
              type: object
              properties:
                chapAuthSession:
                  type: boolean
                iscsiInterface:
                  type: string
                lun:
                  type: number
                chapAuthDiscovery:
                  type: boolean
                iqn:
                  type: string
                portals:
                  type: array
                  items:
                    type: string
                secretRef:
                  $Ref: '#/definitions/V1LocalObjectReference'
                initiatorName:
                  type: string
                readOnly:
                  type: boolean
                fsType:
                  type: string
                targetPortal:
                  type: string
              required:
              - iqn
              - lun
              - targetPortal
            V1KeyToPath:
              type: object
              properties:
                mode:
                  type: number
                path:
                  type: string
                key:
                  type: string
              required:
              - key
              - path
            V1LabelSelector:
              type: object
              properties:
                matchExpressions:
                  type: array
                  items:
                    $ref: '#/definitions/V1LabelSelectorRequirement'
                matchLabels:
                  $Ref: '#/definitions/Map'
            V1LabelSelectorRequirement:
              type: object
              properties:
                values:
                  type: array
                  items:
                    type: string
                key:
                  type: string
                operator:
                  type: string
              required:
              - key
              - operator
            V1Lifecycle:
              type: object
              properties:
                postStart:
                  $Ref: '#/definitions/V1Handler'
                preStop:
                  $Ref: '#/definitions/V1Handler'
            V1LocalObjectReference:
              type: object
              properties:
                name:
                  type: string
            V1NFSVolumeSource:
              type: object
              properties:
                path:
                  type: string
                server:
                  type: string
                readOnly:
                  type: boolean
              required:
              - path
              - server
            V1NodeAffinity:
              type: object
              properties:
                requiredDuringSchedulingIgnoredDuringExecution:
                  $Ref: '#/definitions/V1NodeSelector'
                preferredDuringSchedulingIgnoredDuringExecution:
                  type: array
                  items:
                    $ref: '#/definitions/V1PreferredSchedulingTerm'
            V1NodeSelector:
              type: object
              properties:
                nodeSelectorTerms:
                  type: array
                  items:
                    $ref: '#/definitions/V1NodeSelectorTerm'
              required:
              - nodeSelectorTerms
            V1NodeSelectorRequirement:
              type: object
              properties:
                values:
                  type: array
                  items:
                    type: string
                key:
                  type: string
                operator:
                  type: string
              required:
              - key
              - operator
            V1NodeSelectorTerm:
              type: object
              properties:
                matchExpressions:
                  type: array
                  items:
                    $ref: '#/definitions/V1NodeSelectorRequirement'
                matchFields:
                  type: array
                  items:
                    $ref: '#/definitions/V1NodeSelectorRequirement'
            V1ObjectFieldSelector:
              type: object
              properties:
                apiVersion:
                  type: string
                fieldPath:
                  type: string
              required:
              - fieldPath
            V1PersistentVolumeClaimVolumeSource:
              type: object
              properties:
                claimName:
                  type: string
                readOnly:
                  type: boolean
              required:
              - claimName
            V1PhotonPersistentDiskVolumeSource:
              type: object
              properties:
                pdID:
                  type: string
                fsType:
                  type: string
              required:
              - pdID
            V1PodAffinity:
              type: object
              properties:
                requiredDuringSchedulingIgnoredDuringExecution:
                  type: array
                  items:
                    $ref: '#/definitions/V1PodAffinityTerm'
                preferredDuringSchedulingIgnoredDuringExecution:
                  type: array
                  items:
                    $ref: '#/definitions/V1WeightedPodAffinityTerm'
            V1PodAffinityTerm:
              type: object
              properties:
                labelSelector:
                  $Ref: '#/definitions/V1LabelSelector'
                topologyKey:
                  type: string
                namespaces:
                  type: array
                  items:
                    type: string
              required:
              - topologyKey
            V1PodAntiAffinity:
              type: object
              properties:
                requiredDuringSchedulingIgnoredDuringExecution:
                  type: array
                  items:
                    $ref: '#/definitions/V1PodAffinityTerm'
                preferredDuringSchedulingIgnoredDuringExecution:
                  type: array
                  items:
                    $ref: '#/definitions/V1WeightedPodAffinityTerm'
            V1PodReadinessGate:
              type: object
              properties:
                conditionType:
                  type: string
              required:
              - conditionType
            V1PodSecurityContext:
              type: object
              properties:
                runAsUser:
                  type: number
                seLinuxOptions:
                  $Ref: '#/definitions/V1SELinuxOptions'
                fsGroup:
                  type: number
                windowsOptions:
                  $Ref: '#/definitions/V1WindowsSecurityContextOptions'
                fsGroupChangePolicy:
                  type: string
                supplementalGroups:
                  type: array
                  items:
                    type: number
                runAsGroup:
                  type: number
                runAsNonRoot:
                  type: boolean
                sysctls:
                  type: array
                  items:
                    $ref: '#/definitions/V1Sysctl'
            V1PortworxVolumeSource:
              type: object
              properties:
                volumeID:
                  type: string
                readOnly:
                  type: boolean
                fsType:
                  type: string
              required:
              - volumeID
            V1PreferredSchedulingTerm:
              type: object
              properties:
                preference:
                  $Ref: '#/definitions/V1NodeSelectorTerm'
                weight:
                  type: number
              required:
              - preference
              - weight
            V1Probe:
              type: object
              properties:
                failureThreshold:
                  type: number
                periodSeconds:
                  type: number
                tcpSocket:
                  $Ref: '#/definitions/V1TCPSocketAction'
                timeoutSeconds:
                  type: number
                successThreshold:
                  type: number
                initialDelaySeconds:
                  type: number
                exec:
                  $Ref: '#/definitions/V1ExecAction'
                httpGet:
                  $Ref: '#/definitions/V1HTTPGetAction'
            V1ProjectedVolumeSource:
              type: object
              properties:
                sources:
                  type: array
                  items:
                    $ref: '#/definitions/V1VolumeProjection'
                defaultMode:
                  type: number
              required:
              - sources
            V1QuobyteVolumeSource:
              type: object
              properties:
                volume:
                  type: string
                registry:
                  type: string
                readOnly:
                  type: boolean
                user:
                  type: string
                tenant:
                  type: string
                group:
                  type: string
              required:
              - registry
              - volume
            V1RBDVolumeSource:
              type: object
              properties:
                image:
                  type: string
                pool:
                  type: string
                secretRef:
                  $Ref: '#/definitions/V1LocalObjectReference'
                readOnly:
                  type: boolean
                fsType:
                  type: string
                keyring:
                  type: string
                user:
                  type: string
                monitors:
                  type: array
                  items:
                    type: string
              required:
              - image
              - monitors
            V1ResourceFieldSelector:
              type: object
              properties:
                divisor:
                  $Ref: '#/definitions/Quantity'
                resource:
                  type: string
                containerName:
                  type: string
              required:
              - resource
            V1ResourceRequirements:
              type: object
              properties:
                requests:
                  $Ref: '#/definitions/Map'
                limits:
                  $Ref: '#/definitions/Map'
            V1SELinuxOptions:
              type: object
              properties:
                role:
                  type: string
                level:
                  type: string
                type:
                  type: string
                user:
                  type: string
            V1ScaleIOVolumeSource:
              type: object
              properties:
                system:
                  type: string
                protectionDomain:
                  type: string
                sslEnabled:
                  type: boolean
                storageMode:
                  type: string
                volumeName:
                  type: string
                secretRef:
                  $Ref: '#/definitions/V1LocalObjectReference'
                readOnly:
                  type: boolean
                fsType:
                  type: string
                storagePool:
                  type: string
                gateway:
                  type: string
              required:
              - gateway
              - secretRef
              - system
            V1SecretEnvSource:
              type: object
              properties:
                name:
                  type: string
                optional:
                  type: boolean
            V1SecretKeySelector:
              type: object
              properties:
                name:
                  type: string
                optional:
                  type: boolean
                key:
                  type: string
              required:
              - key
            V1SecretProjection:
              type: object
              properties:
                name:
                  type: string
                optional:
                  type: boolean
                items:
                  type: array
                  items:
                    $ref: '#/definitions/V1KeyToPath'
            V1SecretReference:
              type: object
              properties:
                name:
                  type: string
                namespace:
                  type: string
            V1SecretVolumeSource:
              type: object
              properties:
                secretName:
                  type: string
                defaultMode:
                  type: number
                optional:
                  type: boolean
                items:
                  type: array
                  items:
                    $ref: '#/definitions/V1KeyToPath'
            V1SecurityContext:
              type: object
              properties:
                privileged:
                  type: boolean
                runAsUser:
                  type: number
                capabilities:
                  $Ref: '#/definitions/V1Capabilities'
                seLinuxOptions:
                  $Ref: '#/definitions/V1SELinuxOptions'
                windowsOptions:
                  $Ref: '#/definitions/V1WindowsSecurityContextOptions'
                procMount:
                  type: string
                allowPrivilegeEscalation:
                  type: boolean
                runAsGroup:
                  type: number
                runAsNonRoot:
                  type: boolean
                readOnlyRootFilesystem:
                  type: boolean
            V1ServiceAccountTokenProjection:
              type: object
              properties:
                path:
                  type: string
                audience:
                  type: string
                expirationSeconds:
                  type: number
              required:
              - path
            V1StorageOSVolumeSource:
              type: object
              properties:
                volumeNamespace:
                  type: string
                volumeName:
                  type: string
                secretRef:
                  $Ref: '#/definitions/V1LocalObjectReference'
                readOnly:
                  type: boolean
                fsType:
                  type: string
            V1Sysctl:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
              required:
              - name
              - value
            V1TCPSocketAction:
              type: object
              properties:
                port:
                  $Ref: '#/definitions/IntOrString'
                host:
                  type: string
              required:
              - port
            V1Toleration:
              type: object
              properties:
                effect:
                  type: string
                tolerationSeconds:
                  type: number
                value:
                  type: string
                key:
                  type: string
                operator:
                  type: string
            V1Volume:
              type: object
              properties:
                quobyte:
                  $Ref: '#/definitions/V1QuobyteVolumeSource'
                azureFile:
                  $Ref: '#/definitions/V1AzureFileVolumeSource'
                flexVolume:
                  $Ref: '#/definitions/V1FlexVolumeSource'
                secret:
                  $Ref: '#/definitions/V1SecretVolumeSource'
                projected:
                  $Ref: '#/definitions/V1ProjectedVolumeSource'
                cephfs:
                  $Ref: '#/definitions/V1CephFSVolumeSource'
                scaleIO:
                  $Ref: '#/definitions/V1ScaleIOVolumeSource'
                emptyDir:
                  $Ref: '#/definitions/V1EmptyDirVolumeSource'
                glusterfs:
                  $Ref: '#/definitions/V1GlusterfsVolumeSource'
                gcePersistentDisk:
                  $Ref: '#/definitions/V1GCEPersistentDiskVolumeSource'
                photonPersistentDisk:
                  $Ref: '#/definitions/V1PhotonPersistentDiskVolumeSource'
                azureDisk:
                  $Ref: '#/definitions/V1AzureDiskVolumeSource'
                cinder:
                  $Ref: '#/definitions/V1CinderVolumeSource'
                downwardAPI:
                  $Ref: '#/definitions/V1DownwardAPIVolumeSource'
                awsElasticBlockStore:
                  $Ref: '#/definitions/V1AWSElasticBlockStoreVolumeSource'
                flocker:
                  $Ref: '#/definitions/V1FlockerVolumeSource'
                iscsi:
                  $Ref: '#/definitions/V1ISCSIVolumeSource'
                rbd:
                  $Ref: '#/definitions/V1RBDVolumeSource'
                configMap:
                  $Ref: '#/definitions/V1ConfigMapVolumeSource'
                storageos:
                  $Ref: '#/definitions/V1StorageOSVolumeSource'
                csi:
                  $Ref: '#/definitions/V1CSIVolumeSource'
                name:
                  type: string
                nfs:
                  $Ref: '#/definitions/V1NFSVolumeSource'
                persistentVolumeClaim:
                  $Ref: '#/definitions/V1PersistentVolumeClaimVolumeSource'
                gitRepo:
                  $Ref: '#/definitions/V1GitRepoVolumeSource'
                portworxVolume:
                  $Ref: '#/definitions/V1PortworxVolumeSource'
                vsphereVolume:
                  $Ref: '#/definitions/V1VsphereVirtualDiskVolumeSource'
                fc:
                  $Ref: '#/definitions/V1FCVolumeSource'
                hostPath:
                  $Ref: '#/definitions/V1HostPathVolumeSource'
              required:
              - name
            V1VolumeDevice:
              type: object
              properties:
                devicePath:
                  type: string
                name:
                  type: string
              required:
              - devicePath
              - name
            V1VolumeMount:
              type: object
              properties:
                mountPath:
                  type: string
                mountPropagation:
                  type: string
                name:
                  type: string
                readOnly:
                  type: boolean
                subPath:
                  type: string
                subPathExpr:
                  type: string
              required:
              - mountPath
              - name
            V1VolumeProjection:
              type: object
              properties:
                downwardAPI:
                  $Ref: '#/definitions/V1DownwardAPIProjection'
                configMap:
                  $Ref: '#/definitions/V1ConfigMapProjection'
                secret:
                  $Ref: '#/definitions/V1SecretProjection'
                serviceAccountToken:
                  $Ref: '#/definitions/V1ServiceAccountTokenProjection'
            V1VsphereVirtualDiskVolumeSource:
              type: object
              properties:
                storagePolicyName:
                  type: string
                storagePolicyID:
                  type: string
                volumePath:
                  type: string
                fsType:
                  type: string
              required:
              - volumePath
            V1WeightedPodAffinityTerm:
              type: object
              properties:
                podAffinityTerm:
                  $Ref: '#/definitions/V1PodAffinityTerm'
                weight:
                  type: number
              required:
              - podAffinityTerm
              - weight
            V1WindowsSecurityContextOptions:
              type: object
              properties:
                gmsaCredentialSpec:
                  type: string
                runAsUserName:
                  type: string
                gmsaCredentialSpecName:
                  type: string
          description: The specification of the operation of the WebLogic domain.
            Required.
          properties:
            monitoringExporter:
              $Ref: '#/definitions/MonitoringExporterConfiguration'
              description: The configuration for the WebLogic Monitoring Exporter
                sidecar. If specified, the operator will deploy a sidecar alongside
                each server instance. See https://github.com/oracle/weblogic-monitoring-exporter
            configuration:
              $Ref: '#/definitions/Configuration'
              description: Models and overrides affecting the WebLogic domain configuration.
            configOverrideSecrets:
              type: array
              description: Deprecated. Use `configuration.secrets` instead. Ignored
                if `configuration.secrets` is specified. A list of names of the Secrets
                for optional WebLogic configuration overrides.
              items:
                type: string
            imagePullSecrets:
              type: array
              description: A list of image pull Secrets for the WebLogic Server image.
              items:
                $ref: '#/definitions/V1LocalObjectReference'
            domainUID:
              type: string
              description: Domain unique identifier. It is recommended that this value
                be unique to assist in future work to identify related domains in
                active-passive scenarios across data centers; however, it is only
                required that this value be unique within the namespace, similarly
                to the names of Kubernetes resources. This value is distinct and need
                not match the domain name from the WebLogic domain configuration.
                Defaults to the value of `metadata.name`.
              pattern: ^[a-z0-9-.]{1,45}$
            serverService:
              $Ref: '#/definitions/ServerService'
              description: Customization affecting the generation of Kubernetes Services
                for WebLogic Server instances.
            domainHome:
              type: string
              description: The directory containing the WebLogic domain configuration
                inside the container. Defaults to /shared/domains/domains/<domainUID>
                if `domainHomeSourceType` is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/
                if `domainHomeSourceType` is Image. Defaults to /u01/domains/<domainUID>
                if `domainHomeSourceType` is FromModel.
            domainHomeSourceType:
              type: string
              description: 'Domain home file system source type: Legal values: Image,
                PersistentVolume, FromModel. Image indicates that the domain home
                file system is present in the container image specified by the `image`
                field. PersistentVolume indicates that the domain home file system
                is located on a persistent volume. FromModel indicates that the domain
                home file system will be created and managed by the operator based
                on a WDT domain model. If this field is specified, it overrides the
                value of `domainHomeInImage`. If both fields are unspecified, then
                `domainHomeSourceType` defaults to Image.'
              enum:
              - Image
              - PersistentVolume
              - FromModel
            httpAccessLogInLogHome:
              type: boolean
              description: Specifies whether the server HTTP access log files will
                be written to the same directory specified in `logHome`. Otherwise,
                server HTTP access log files will be written to the directory configured
                in the WebLogic domain configuration. Defaults to true.
            webLogicCredentialsSecret:
              $Ref: '#/definitions/V1SecretReference'
              description: Reference to a Kubernetes Secret that contains the user
                name and password needed to boot a WebLogic Server under the `username`
                and `password` fields.
            adminServer:
              $Ref: '#/definitions/AdminServer'
              description: Lifecycle options for the Administration Server, including
                Java options, environment variables, additional Pod content, and which
                channels or network access points should be exposed using a NodePort
                Service.
            logHome:
              type: string
              description: The directory in a server's container in which to store
                the domain, Node Manager, server logs, server *.out, introspector
                .out, and optionally HTTP access log files if `httpAccessLogInLogHome`
                is true. Ignored if `logHomeEnabled` is false.
            includeServerOutInPodLog:
              type: boolean
              description: Specifies whether the server .out file will be included
                in the Pod's log. Defaults to true.
            clusters:
              type: array
              description: Lifecycle options for all of the Managed Server members
                of a WebLogic cluster, including Java options, environment variables,
                additional Pod content, and the ability to explicitly start, stop,
                or restart cluster members. The `clusterName` field of each entry
                must match a cluster that already exists in the WebLogic domain configuration.
              items:
                $ref: '#/definitions/Cluster'
            serverStartState:
              type: string
              description: The WebLogic runtime state in which the server is to be
                started. Use ADMIN if the server should start in the admin state.
                Defaults to RUNNING.
              enum:
              - RUNNING
              - ADMIN
            image:
              type: string
              description: The WebLogic Server image; required when `domainHomeSourceType`
                is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4.
            imagePullPolicy:
              type: string
              description: The image pull policy for the WebLogic Server image. Legal
                values are Always, Never, and IfNotPresent. Defaults to Always if
                image ends in :latest; IfNotPresent, otherwise.
              enum:
              - Always
              - Never
              - IfNotPresent
            maxClusterConcurrentStartup:
              type: number
              description: The maximum number of cluster member Managed Server instances
                that the operator will start in parallel for a given cluster, if `maxConcurrentStartup`
                is not specified for a specific cluster under the `clusters` field.
                A value of 0 means there is no configured limit. Defaults to 0.
              minimum: 0.0
            replicas:
              type: number
              description: The default number of cluster member Managed Server instances
                to start for each WebLogic cluster in the domain configuration, unless
                `replicas` is specified for that cluster under the `clusters` field.
                For each cluster, the operator will sort cluster member Managed Server
                names from the WebLogic domain configuration by normalizing any numbers
                in the Managed Server name and then sorting alphabetically. This is
                done so that server names such as "managed-server10" come after "managed-server9".
                The operator will then start Managed Servers from the sorted list,
                up to the `replicas` count, unless specific Managed Servers are specified
                as starting in their entry under the `managedServers` field. In that
                case, the specified Managed Servers will be started and then additional
                cluster members will be started, up to the `replicas` count, by finding
                further cluster members in the sorted list that are not already started.
                If cluster members are started because of their entries under `managedServers`,
                then a cluster may have more cluster members running than its `replicas`
                count. Defaults to 0.
              minimum: 0.0
            maxClusterConcurrentShutdown:
              type: number
              description: The default maximum number of WebLogic Server instances
                that a cluster will shut down in parallel when it is being partially
                shut down by lowering its replica count. You can override this default
                on a per cluster basis by setting the cluster's `maxConcurrentShutdown`
                field. A value of 0 means there is no limit. Defaults to 1.
              minimum: 0.0
            domainHomeInImage:
              type: boolean
              description: Deprecated. Use `domainHomeSourceType` instead. Ignored
                if `domainHomeSourceType` is specified. True indicates that the domain
                home file system is present in the container image specified by the
                image field. False indicates that the domain home file system is located
                on a persistent volume. Defaults to unset.
            serverStartPolicy:
              type: string
              description: 'The strategy for deciding whether to start a WebLogic
                Server instance. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED.
                Defaults to IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers.'
              enum:
              - NEVER
              - IF_NEEDED
              - ADMIN_ONLY
            livenessProbeCustomScript:
              type: string
              description: Full path of an optional liveness probe custom script for
                WebLogic Server instance pods. The existing liveness probe script
                `livenessProbe.sh` will invoke this custom script after the existing
                script performs its own checks. This element is optional and is for
                advanced usage only. Its value is not set by default. If the custom
                script fails with non-zero exit status, then pod will fail the liveness
                probe and Kubernetes will restart the container. If the script specified
                by this element value is not found, then it is ignored.
            restartVersion:
              type: string
              description: 'Changes to this field cause the operator to restart WebLogic
                Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers.'
            introspectVersion:
              type: string
              description: 'Changes to this field cause the operator to repeat its
                introspection of the WebLogic domain configuration. Repeating introspection
                is required for the operator to recognize changes to the domain configuration,
                such as adding a new WebLogic cluster or Managed Server instance,
                to regenerate configuration overrides, or to regenerate the WebLogic
                domain home when the `domainHomeSourceType` is FromModel. Introspection
                occurs automatically, without requiring change to this field, when
                servers are first started or restarted after a full domain shut down.
                For the FromModel `domainHomeSourceType`, introspection also occurs
                when a running server must be restarted because of changes to any
                of the fields listed here: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#properties-that-cause-servers-to-be-restarted.
                See also `domains.spec.configuration.overrideDistributionStrategy`.'
            dataHome:
              type: string
              description: An optional directory in a server's container for data
                storage of default and custom file stores. If `dataHome` is not specified
                or its value is either not set or empty, then the data storage directories
                are determined from the WebLogic domain configuration.
            configOverrides:
              type: string
              description: Deprecated. Use `configuration.overridesConfigMap` instead.
                Ignored if `configuration.overridesConfigMap` is specified. The name
                of the ConfigMap for optional WebLogic configuration overrides.
            logHomeEnabled:
              type: boolean
              description: Specifies whether the log home folder is enabled. Defaults
                to true if `domainHomeSourceType` is PersistentVolume; false, otherwise.
            allowReplicasBelowMinDynClusterSize:
              type: boolean
              description: Whether to allow the number of running cluster member Managed
                Server instances to drop below the minimum dynamic cluster size configured
                in the WebLogic domain configuration, if this is not specified for
                a specific cluster under the `clusters` field. Defaults to true.
            serverPod:
              $Ref: '#/definitions/ServerPod'
              description: Customization affecting the generation of Pods for WebLogic
                Server instances.
            managedServers:
              type: array
              description: Lifecycle options for individual Managed Servers, including
                Java options, environment variables, additional Pod content, and the
                ability to explicitly start, stop, or restart a named server instance.
                The `serverName` field of each entry must match a Managed Server that
                already exists in the WebLogic domain configuration or that matches
                a dynamic cluster member based on the server template.
              items:
                $ref: '#/definitions/ManagedServer'
        status:
          type: object
          definitions:
            ClusterStatus:
              type: object
              properties:
                minimumReplicas:
                  type: number
                  description: The minimum number of cluster members.
                  minimum: 0.0
                maximumReplicas:
                  type: number
                  description: The maximum number of cluster members.
                  minimum: 0.0
                replicas:
                  type: number
                  description: The number of currently running cluster members.
                  minimum: 0.0
                clusterName:
                  type: string
                  description: WebLogic cluster name.
                readyReplicas:
                  type: number
                  description: The number of ready cluster members.
                  minimum: 0.0
                replicasGoal:
                  type: number
                  description: The requested number of cluster members. Cluster members
                    will be started by the operator if this value is larger than zero.
                  minimum: 0.0
            DateTime:
              type: string
              format: date-time
            DomainCondition:
              type: object
              properties:
                reason:
                  type: string
                  description: Unique, one-word, CamelCase reason for the condition's
                    last transition.
                type:
                  type: string
                  description: The type of the condition. Valid types are Progressing,
                    Available, and Failed.
                  enum:
                  - Progressing
                  - Available
                  - Failed
                lastTransitionTime:
                  $Ref: '#/definitions/DateTime'
                  description: Last time the condition transitioned from one status
                    to another.
                message:
                  type: string
                  description: Human-readable message indicating details about last
                    transition.
                lastProbeTime:
                  $Ref: '#/definitions/DateTime'
                  description: Last time we probed the condition.
                status:
                  type: string
                  description: The status of the condition. Can be True, False, Unknown.
            ServerHealth:
              type: object
              properties:
                overallHealth:
                  type: string
                  description: Server health of this WebLogic Server instance. If
                    the value is "Not available", the operator has failed to read
                    the health. If the value is "Not available (possibly overloaded)",
                    the operator has failed to read the health of the server possibly
                    due to the server is in the overloaded state.
                activationTime:
                  $Ref: '#/definitions/DateTime'
                  description: RFC 3339 date and time at which the server started.
                subsystems:
                  type: array
                  description: Status of unhealthy subsystems, if any.
                  items:
                    $ref: '#/definitions/SubsystemHealth'
            ServerStatus:
              type: object
              properties:
                nodeName:
                  type: string
                  description: Name of Node that is hosting the Pod containing this
                    WebLogic Server instance.
                desiredState:
                  type: string
                  description: Desired state of this WebLogic Server instance. Values
                    are RUNNING, ADMIN, or SHUTDOWN.
                clusterName:
                  type: string
                  description: WebLogic cluster name, if the server is a member of
                    a cluster.
                serverName:
                  type: string
                  description: WebLogic Server instance name.
                health:
                  $Ref: '#/definitions/ServerHealth'
                  description: Current status and health of a specific WebLogic Server
                    instance.
                state:
                  type: string
                  description: Current state of this WebLogic Server instance.
            SubsystemHealth:
              type: object
              properties:
                symptoms:
                  type: array
                  description: Symptoms provided by the reporting subsystem.
                  items:
                    type: string
                health:
                  type: string
                  description: Server health of this WebLogic Server instance.
                subsystemName:
                  type: string
                  description: Name of subsystem providing symptom information.
          description: The current status of the operation of the WebLogic domain.
            Updated automatically by the operator.
          properties:
            reason:
              type: string
              description: A brief CamelCase message indicating details about why
                the domain is in this state.
            servers:
              type: array
              description: Status of WebLogic Servers in this domain.
              items:
                $ref: '#/definitions/ServerStatus'
            introspectJobFailureCount:
              type: number
              description: Non-zero if the introspector job fails for any reason.
                You can configure an introspector job retry limit for jobs that log
                script failures using the Operator tuning parameter 'domainPresenceFailureRetryMaxCount'
                (default 5). You cannot configure a limit for other types of failures,
                such as a Domain resource reference to an unknown secret name; in
                which case, the retries are unlimited.
              minimum: 0.0
            replicas:
              type: number
              description: The number of running cluster member Managed Servers in
                the WebLogic cluster if there is exactly one cluster defined in the
                domain configuration and where the `replicas` field is set at the
                `spec` level rather than for the specific cluster under `clusters`.
                This field is provided to support use of Kubernetes scaling for this
                limited use case.
              minimum: 0.0
            startTime:
              $Ref: '#/definitions/DateTime'
              description: RFC 3339 date and time at which the operator started the
                domain. This will be when the operator begins processing and will
                precede when the various servers or clusters are available.
            conditions:
              type: array
              description: Current service state of the domain.
              items:
                $ref: '#/definitions/DomainCondition'
            message:
              type: string
              description: A human readable message indicating details about why the
                domain is in this condition.
            clusters:
              type: array
              description: Status of WebLogic clusters in this domain.
              items:
                $ref: '#/definitions/ClusterStatus'
  versions:
  - name: v8
    served: true
    storage: true
  - name: v7
    served: true
    storage: false
